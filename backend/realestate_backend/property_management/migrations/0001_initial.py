# Generated by Django 5.2 on 2025-05-19 07:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('property', '0001_initial'),
        ('smartcontract', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_type', models.CharField(choices=[('MOVE_IN', 'Move-In'), ('MOVE_OUT', 'Move-Out'), ('ROUTINE', 'Routine'), ('SPECIAL', 'Special')], max_length=10)),
                ('inspection_date', models.DateTimeField()),
                ('next_inspection_date', models.DateTimeField(blank=True, null=True)),
                ('summary', models.TextField(blank=True)),
                ('checklist', models.JSONField()),
                ('condition_rating', models.PositiveSmallIntegerField(blank=True, help_text='Overall property condition score', null=True)),
                ('report_document', models.FileField(blank=True, upload_to='inspection_reports/')),
                ('requires_followup', models.BooleanField(default=False)),
                ('followup_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conducted_inspections', to='core.userprofile')),
                ('photos', models.ManyToManyField(blank=True, to='property.propertyimage')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='property.property')),
            ],
            options={
                'ordering': ['-inspection_date'],
                'get_latest_by': 'inspection_date',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('emergency_contact', models.CharField(blank=True, max_length=150)),
                ('emergency_phone', models.CharField(blank=True, max_length=20)),
                ('previous_address', models.TextField(blank=True)),
                ('employer', models.CharField(blank=True, max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('credit_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('background_check', models.FileField(blank=True, upload_to='tenant_checks/')),
                ('is_verified', models.BooleanField(default=False)),
                ('preferred_communication', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'Text'), ('CALL', 'Phone Call')], default='EMAIL', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user_profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenant_profile', to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('URGENT', 'Urgent (24h)'), ('HIGH', 'High (72h)'), ('MEDIUM', 'Medium (1 week)'), ('LOW', 'Low (1 month)')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('DEFERRED', 'Deferred')], default='SUBMITTED', max_length=15)),
                ('area', models.CharField(blank=True, max_length=100)),
                ('preferred_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('after_photos', models.ManyToManyField(blank=True, related_name='maintenance_after', to='property.propertyimage')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to='core.userprofile')),
                ('before_photos', models.ManyToManyField(blank=True, related_name='maintenance_before', to='property.propertyimage')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='property.property')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submitted_requests', to='core.userprofile')),
            ],
            options={
                'ordering': ['-priority', 'status'],
                'indexes': [models.Index(fields=['property', 'status'], name='property_ma_propert_2c02ac_idx'), models.Index(fields=['assigned_to', 'priority'], name='property_ma_assigne_dffdc3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lease_type', models.CharField(choices=[('RESIDENTIAL', 'Residential'), ('COMMERCIAL', 'Commercial'), ('SHORT_TERM', 'Short Term')], max_length=15)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due_day', models.PositiveSmallIntegerField(default=1)),
                ('late_fee', models.DecimalField(decimal_places=2, default=50.0, max_digits=6)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('TERMINATED', 'Terminated')], default='DRAFT', max_length=10)),
                ('is_auto_renew', models.BooleanField(default=False)),
                ('document', models.FileField(upload_to='lease_agreements/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='property.property')),
                ('smart_contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smartcontract.smartcontract')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='leases', to='property_management.tenant')),
            ],
            options={
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['property', 'status'], name='property_ma_propert_1c9ed8_idx'), models.Index(fields=['tenant', 'end_date'], name='property_ma_tenant__73426e_idx')],
            },
        ),
    ]
