# Generated by Django 5.2 on 2025-05-19 07:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ai_integration', '0001_initial'),
        ('property', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_type', models.CharField(max_length=20)),
                ('region_id', models.CharField(max_length=100)),
                ('trend_type', models.CharField(choices=[('PRICE', 'Price Trend'), ('DEMAND', 'Demand Trend'), ('RENT', 'Rental Trend'), ('MACRO', 'Macroeconomic')], max_length=10)),
                ('trend_data', models.JSONField()),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('change_30d', models.DecimalField(decimal_places=2, max_digits=5)),
                ('change_90d', models.DecimalField(decimal_places=2, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(max_length=100)),
                ('next_update', models.DateTimeField()),
            ],
            options={
                'indexes': [models.Index(fields=['region_type', 'trend_type'], name='markets_val_region__1a1f09_idx')],
                'unique_together': {('region_type', 'region_id', 'trend_type')},
            },
        ),
        migrations.CreateModel(
            name='NeighborhoodData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('neighborhood_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('geo_boundary', models.JSONField()),
                ('walk_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('transit_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('safety_index', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('school_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('demographics', models.JSONField(blank=True, null=True)),
                ('amenities', models.JSONField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('data_source', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Neighborhood Data',
                'indexes': [models.Index(fields=['city', 'country'], name='markets_val_city_76798f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Valuation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valuation_type', models.CharField(choices=[('AUTOMATED', 'Automated Valuation Model'), ('MANUAL', 'Appraiser Valuation'), ('HYBRID', 'AI-Assisted')], max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('valuation_date', models.DateTimeField(auto_now_add=True)),
                ('effective_date', models.DateField()),
                ('market_conditions', models.JSONField()),
                ('notes', models.TextField(blank=True)),
                ('is_current', models.BooleanField(default=True)),
                ('comparable_properties', models.ManyToManyField(blank=True, to='property.property')),
                ('model_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_integration.modelversion')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valuations', to='property.property')),
            ],
            options={
                'ordering': ['-valuation_date'],
                'get_latest_by': 'valuation_date',
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('value_per_sqft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('source', models.CharField(max_length=100)),
                ('event_type', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='property.property')),
            ],
            options={
                'verbose_name_plural': 'Price Histories',
                'ordering': ['property', '-date_recorded'],
                'unique_together': {('property', 'date_recorded')},
            },
        ),
    ]
