# Generated by Django 5.2 on 2025-05-19 07:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('property', '0001_initial'),
        ('transactions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('scope', models.CharField(choices=[('GLOBAL', 'Platform-wide'), ('JURISDICTION', 'Jurisdiction-specific'), ('ASSET_TYPE', 'Asset-type Specific'), ('USER_TYPE', 'User-type Specific')], max_length=15)),
                ('enforcement_level', models.CharField(choices=[('HARD', 'Hard Requirement'), ('SOFT', 'Advisory'), ('NOTICE', 'Disclosure Only')], max_length=10)),
                ('jurisdiction', models.CharField(blank=True, max_length=100)),
                ('user_types', models.JSONField(default=list)),
                ('condition', models.JSONField()),
                ('requirements', models.JSONField()),
                ('automated_checks', models.BooleanField(default=False)),
                ('source_regulation', models.CharField(blank=True, max_length=200)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField()),
                ('sunset_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_types', models.ManyToManyField(blank=True, to='property.propertytype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['rule_id', '-version'],
                'get_latest_by': 'version',
            },
        ),
        migrations.CreateModel(
            name='LegalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('CONTRACT', 'Contract Agreement'), ('DISCLOSURE', 'Disclosure Document'), ('CERTIFICATE', 'Legal Certificate'), ('GOVERNMENT', 'Government Filing'), ('TERMS', 'Terms of Service')], max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('version', models.CharField(max_length=20)),
                ('language', models.CharField(default='en', max_length=10)),
                ('document_file', models.FileField(upload_to='legal_documents/')),
                ('hash_sha256', models.CharField(max_length=64)),
                ('template_id', models.CharField(blank=True, max_length=50)),
                ('signature_status', models.CharField(choices=[('UNSIGNED', 'Unsigned'), ('PENDING', 'Signature Pending'), ('COMPLETE', 'Fully Executed'), ('EXPIRED', 'Expired')], default='UNSIGNED', max_length=10)),
                ('signature_data', models.JSONField(default=dict)),
                ('blockchain_proof', models.CharField(blank=True, max_length=66)),
                ('governing_law', models.CharField(blank=True, max_length=100)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_properties', models.ManyToManyField(blank=True, to='property.property')),
                ('related_users', models.ManyToManyField(blank=True, to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RegulatoryCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('KYC', 'Know Your Customer'), ('AML', 'Anti-Money Laundering'), ('ACCREDITATION', 'Investor Accreditation'), ('JURISDICTION', 'Jurisdictional Compliance')], max_length=15)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXEMPT', 'Exempt')], default='PENDING', max_length=10)),
                ('submitted_data', models.JSONField()),
                ('external_reference', models.CharField(blank=True, max_length=100)),
                ('verification_hash', models.CharField(blank=True, max_length=66)),
                ('verification_block', models.PositiveBigIntegerField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('documents', models.ManyToManyField(blank=True, to='legal.legaldocument')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='legal.compliancerule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regulatory_checks', to='core.userprofile')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaxRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('INCOME', 'Rental Income'), ('CAPITAL_GAINS', 'Capital Gains'), ('WITHHOLDING', 'Tax Withholding'), ('FILING', 'Tax Filing')], max_length=15)),
                ('jurisdiction', models.CharField(choices=[('US', 'United States'), ('EU', 'European Union'), ('UK', 'United Kingdom'), ('SG', 'Singapore')], max_length=5)),
                ('tax_year', models.PositiveSmallIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('calculation_breakdown', models.JSONField()),
                ('is_filed', models.BooleanField(default=False)),
                ('filing_reference', models.CharField(blank=True, max_length=100)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('forms', models.ManyToManyField(blank=True, to='legal.legaldocument')),
                ('investment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transactions.investment')),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='property.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_records', to='core.userprofile')),
            ],
            options={
                'ordering': ['-tax_year', 'jurisdiction'],
            },
        ),
        migrations.AddIndex(
            model_name='legaldocument',
            index=models.Index(fields=['document_type', 'signature_status'], name='legal_legal_documen_ab93ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='legaldocument',
            unique_together={('title', 'version')},
        ),
        migrations.AddIndex(
            model_name='regulatorycheck',
            index=models.Index(fields=['user', 'status'], name='legal_regul_user_id_6ae828_idx'),
        ),
        migrations.AddIndex(
            model_name='regulatorycheck',
            index=models.Index(fields=['check_type', 'expires_at'], name='legal_regul_check_t_3b8a45_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='regulatorycheck',
            unique_together={('user', 'check_type', 'requirement')},
        ),
        migrations.AlterUniqueTogether(
            name='taxrecord',
            unique_together={('user', 'record_type', 'tax_year', 'jurisdiction')},
        ),
    ]
