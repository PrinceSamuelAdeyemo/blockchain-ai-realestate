"use client";

/* import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
 */



import { Web3AuthProvider } from '@/providers/Web3AuthProvider';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { usePathname } from 'next/navigation';
import { GoogleOAuthProvider } from '@react-oauth/google';
import './globals.css';

const inter = Inter({ subsets: ['latin'] });
/* 
export const metadata: Metadata = {
  title: 'Homes & Props',
  description: 'Your app description',
};
 */
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = usePathname();
  const needsWallet = pathname.startsWith('/wallet') || pathname.startsWith('/buy');
  console.log('needsWallet:', needsWallet);
  console.log('google client id', process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID!)

  return (
    <html lang="en">
      <body className={inter.className}>
        <GoogleOAuthProvider clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID!}>
          {needsWallet ? (
            <Web3AuthProvider>{children}</Web3AuthProvider>
          ) : (
            children
          )}
        </GoogleOAuthProvider>
      </body>
    </html>
  );
}