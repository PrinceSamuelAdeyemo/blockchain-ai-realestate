{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://P%3A/decentralized_ai_realestate/frontend/dapp-ai-realestate/app/property/%5BpropertyId%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useParams } from \"next/navigation\";\r\nimport { useState } from \"react\";\r\nimport Web3 from \"web3\";\r\n//import propertyCrowdfundABI from \"P:/decentralized_ai_realestate/blockchain/artifacts/contracts/PropertyCrowfund.sol/PropertyCrowdfund.json\"; // Adjust path as needed\r\nimport propertyCrowdfundABI from \"..@/../blockchain/artifacts/contracts/PropertyCrowfund.sol/PropertyCrowdfund.json\"; // Adjust path as needed\r\n\r\nconst PROPERTYCROWDFUND_CONTRACT_ADDRESS = process.env.PROPERTYFUNDCONTRACTADDRESS\r\nconst REALESTATETOKEN_CONTRACT_ADDRESS = process.env.REALESTATETOKENCONTRACTADDRESS\r\n\r\nexport default function PropertyBuyPage() {\r\n  const { propertyId } = useParams();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [txStatus, setTxStatus] = useState(\"\");\r\n\r\n  const handleInvest = async () => {\r\n    if (typeof window.ethereum === \"undefined\") {\r\n      setTxStatus(\"MetaMask not found\");\r\n      return;\r\n    }\r\n    try {\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const web3 = new Web3(window.ethereum);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const contract = new web3.eth.Contract(propertyCrowdfundABI.abi, PROPERTYCROWDFUND_CONTRACT_ADDRESS);\r\n\r\n      const valueWei = web3.utils.toWei(amount, \"ether\");\r\n      setTxStatus(\"Sending transaction...\");\r\n      await contract.methods.invest(propertyId).send({\r\n        from: accounts[0],\r\n        value: valueWei,\r\n      });\r\n      setTxStatus(\"Investment successful!\");\r\n    } catch (err: any) {\r\n      setTxStatus(\"Error: \" + (err.message || err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Property #{propertyId}</h1>\r\n      <label>\r\n        Amount to invest (ETH):{\" \"}\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          min=\"0\"\r\n          step=\"0.01\"\r\n        />\r\n      </label>\r\n      <button onClick={handleInvest}>Buy/Crowdfund</button>\r\n      <p>{txStatus}</p>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;;;;;;AAJA;;;;;;AAQA,MAAM,qCAAqC,QAAQ,GAAG,CAAC,2BAA2B;AAClF,MAAM,mCAAmC,QAAQ,GAAG,CAAC,8BAA8B;AAEpE,SAAS;IACtB,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAC/B,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe;QACnB,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,YAAY;YACZ;QACF;QACA,IAAI;YACF,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;gBAAE,QAAQ;YAAsB;YAC9D,MAAM,OAAO,IAAI,2JAAA,CAAA,UAAI,CAAC,OAAO,QAAQ;YACrC,MAAM,WAAW,MAAM,KAAK,GAAG,CAAC,WAAW;YAC3C,MAAM,WAAW,IAAI,KAAK,GAAG,CAAC,QAAQ,CAAC,qBAAqB,GAAG,EAAE;YAEjE,MAAM,WAAW,KAAK,KAAK,CAAC,KAAK,CAAC,QAAQ;YAC1C,YAAY;YACZ,MAAM,SAAS,OAAO,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC;gBAC7C,MAAM,QAAQ,CAAC,EAAE;gBACjB,OAAO;YACT;YACA,YAAY;QACd,EAAE,OAAO,KAAU;YACjB,YAAY,YAAY,CAAC,IAAI,OAAO,IAAI,GAAG;QAC7C;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;;oBAAG;oBAAW;;;;;;;0BACf,8OAAC;;oBAAM;oBACmB;kCACxB,8OAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wBACzC,KAAI;wBACJ,MAAK;;;;;;;;;;;;0BAGT,8OAAC;gBAAO,SAAS;0BAAc;;;;;;0BAC/B,8OAAC;0BAAG;;;;;;;;;;;;AAGV","debugId":null}}]
}